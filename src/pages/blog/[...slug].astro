---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  return blogPosts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post }: Props = Astro.props;
const { Content } = await post.render();

// Preparar datos SEO para el Layout
const seoData = {
  title: post.data.title,
  description: post.data.description,
  image: post.data.image,
  pageType: 'article' as const,
  seo: post.data.seo || {}
};
---

<Layout {...seoData}>
  <article class="mx-auto max-w-4xl px-4 py-12">
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-6 space-text-gradient">{post.data.title}</h1>
      
      <div class="flex items-center gap-4 text-gray-600 dark:text-gray-400 mb-8">
        <time datetime={post.data.pubDate.toISOString()}>
          {post.data.pubDate.toLocaleDateString('es-ES', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        {post.data.modDate && (
          <span>â€¢ Actualizado el {post.data.modDate.toLocaleDateString('es-ES')}</span>
        )}
      </div>

      {post.data.image && (
        <div class="mb-8">
          <img 
            src={post.data.image} 
            alt={post.data.title}
            class="w-full h-96 object-cover rounded-xl shadow-2xl"
            loading="eager"
          />
        </div>
      )}

      {post.data.categories && (
        <div class="flex flex-wrap gap-2 mb-8">
          {post.data.categories.map((category: string) => (
            <a 
              href={`/categorias/${category.toLowerCase().replace(/\s+/g, '-')}/`}
              class="bg-blue-500/20 text-blue-700 dark:text-blue-300 px-4 py-2 rounded-full text-sm hover:bg-blue-500/30 transition-colors"
            >
              {category}
            </a>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose-space">
      <Content />
    </div>
    
    {post.data.tags && (
      <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
        <div class="flex flex-wrap gap-2">
          <span class="text-gray-600 dark:text-gray-400 font-medium">Tags:</span>
          {post.data.tags.map((tag: string) => (
            <span class="bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 px-3 py-1 rounded-full text-sm">
              #{tag}
            </span>
          ))}
        </div>
      </footer>
    )}
  </article>
  
  <nav class="mx-auto max-w-4xl px-4 py-8">
    <a 
      href="/blog/" 
      class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
    >
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      Volver al blog
    </a>
  </nav>
</Layout>